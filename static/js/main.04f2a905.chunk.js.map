{"version":3,"sources":["components/PersonLinks.tsx","App.tsx","components/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonItem.tsx","components/PeopleList.tsx","components/PeoplePage.tsx","index.tsx"],"names":["PersonLinks","to","text","className","isActive","classNames","App","role","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonItem","person","slug","name","sex","born","died","motherName","fatherName","isSelected","PeopleList","persons","showErrorMessage","useParams","map","PeoplePage","useState","setPersons","isLoading","setIsLoading","showError","setShowError","loadingPeople","loadedPeople","prepearedPeople","father","find","dad","mother","mam","useEffect","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.04f2a905.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PersonLinks: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { PersonLinks } from './components/PersonLinks';\n\n// не має помилки про посилку з сервером, лажа з стилями, заголовки таблиць\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PersonLinks to=\"/\" text=\"Home\" />\n          <PersonLinks to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <Outlet />\n  </div>\n);\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person\n  slug: string\n};\n\nexport const PersonItem: FC<Props> = ({ person, slug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const isSelected = person.slug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName || '-'}</td>\n      <td>\n        {' '}\n        {fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  persons: Person[]\n  showErrorMessage: boolean\n};\n\nexport const PeopleList: FC<Props> = ({ persons, showErrorMessage }) => {\n  const { slug = 'home' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <tbody>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          {showErrorMessage\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n            : persons.map((person) => (\n              <PersonItem\n                key={person.slug}\n                person={person}\n                slug={slug}\n              />\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleList } from './PeopleList';\n\nexport const PeoplePage = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const loadingPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      const prepearedPeople = loadedPeople.map((person) => {\n        const father = loadedPeople.find((dad) => dad === person.father);\n        const mother = loadedPeople.find((mam) => mam === person.mother);\n\n        return {\n          ...person,\n          father,\n          mother,\n        };\n      });\n\n      setPersons(prepearedPeople);\n    } catch {\n      setShowError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadingPeople();\n  }, []);\n\n  return (\n    showError\n      ? (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )\n\n      : (\n        <main className=\"section\">\n          <div className=\"container\">\n            <div className=\"block\">\n              <div className=\"box table-container\">\n                {isLoading\n                  ? (<Loader />)\n                  : (\n                    <PeopleList\n                      persons={persons}\n                      showErrorMessage={persons.length <= 0}\n                    />\n                  )}\n              </div>\n            </div>\n          </div>\n        </main>\n      )\n  );\n};\n","import {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n\n          <Route\n            path=\":slug\"\n            element={(\n              <>\n                <PeoplePage />\n              </>\n            )}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}